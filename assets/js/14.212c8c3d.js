(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{372:function(t,a,s){"use strict";s.r(a);var e=s(45),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"local-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#local-data"}},[t._v("#")]),t._v(" Local Data")]),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("Under folder "),s("code",[t._v("data")]),t._v(" you can set files to use each day. Two types of files can be placed: "),s("code",[t._v("input.txt")]),t._v(" and "),s("code",[t._v("test.txt")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├── data\n│   └── 2021\n│       ├── day1\n│       │   ├── input.txt\n│       │   └── test.txt\n│       ├── day2\n│       └── day3\n│\n├── aocconfig.json\n└── src\n")])])]),s("h2",{attrs:{id:"config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[t._v("#")]),t._v(" Config")]),t._v(" "),s("p",[t._v("To use local files, "),s("code",[t._v("local")]),t._v(" is required. (See "),s("RouterLink",{attrs:{to:"/config/#local"}},[t._v("Config")]),t._v(")")],1),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"local"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"how-it-works"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works"}},[t._v("#")]),t._v(" How it works")]),t._v(" "),s("p",[t._v("By default, code will be executed using "),s("code",[t._v("input")]),t._v(" file. Except if specified.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("part1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" part2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Execute with test.txt file")]),t._v("\n")])])]),s("p",[t._v("The file should contain the text given for the problem. On code you'll get an array of strings; one string per line.")])])}),[],!1,null,null,null);a.default=n.exports}}]);